name: CI

on: [push, pull_request]

jobs:
    test-linux:
        runs-on: ubuntu-latest
        name: Test on Linux
        strategy:
            matrix:
                config:
                    [
                        { image: 'debian:latest', name: 'Debian' },
                        { image: 'ubuntu:latest', name: 'Ubuntu' },
                        { image: 'fedora:latest', name: 'Fedora' },
                        { image: 'archlinux:latest', name: 'Arch Linux' },
                    ]
        container:
            image: ${{ matrix.config.image }}

        steps:
            - name: Checkout on {{ matrix.image.name }}
              uses: actions/checkout@v4

            - name: Install Dependencies on {{ matrix.image.name }}
              run: |
                  # Determine package manager based on image name
                  case "${{ matrix.config.name }}" in
                      Debian|Ubuntu)
                          apt-get update
                          apt-get install -y zsh curl git gdb build-essential jq nodejs npm python3 python3-pip locales procps golang-go
                          ;;
                      Fedora|Rocky\ Linux)
                          dnf install -y zsh curl git gdb gcc jq nodejs npm python3 python3-pip glibc-all-langpacks procps-ng golang
                          ;;
                      Arch\ Linux*)
                          pacman -Syu --noconfirm zsh curl git gdb gcc nodejs npm jq python python-pip procps-ng go
                          ;;
                  esac

            - name: Run Install Script on {{ matrix.image.name }}
              shell: bash
              run: |
                  chmod +x install.sh
                  ./install.sh

    test-macos:
        runs-on: macos-latest
        name: Test on macOS
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.x'
                  cache: 'pip'

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: latest

            - name: Install Dependencies
              run: |
                  brew update
                  brew install zsh

            - name: Run Install Script
              shell: bash
              run: |
                  chmod +x install.sh
                  ./install.sh

    semantic-release:
        name: Release
        if: ${{ !github.event.act }} # skip during local actions testing
        needs: [test-linux, test-macos]
        runs-on: ubuntu-latest
        permissions:
            contents: write
            issues: write
        steps:
            - uses: actions/checkout@v4
            - name: Run semantic-release
              if: github.repository == 'bartventer/dotfiles' && github.event_name == 'push'
              run: |
                  yarn global add semantic-release@17 @semantic-release/changelog @semantic-release/git
                  semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
